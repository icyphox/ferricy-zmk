#define OS_LEAD  &kp LCTRL &kp LSHFT &kp U  // Linux only (?)
#define OS_TRAIL &kp RET

#define STRINGIFY(s) #s
#define UC_MACRO(NAME, UNICODE_BINDING) \
    macros { \
        NAME: NAME { \
            wait-ms = <0>; \
            tap-ms = <1>; \
            compatible = "zmk,behavior-macro"; \
            label = STRINGIFY(ZM_ ## NAME); \
            #binding-cells = <0>; \
            bindings = <OS_LEAD UNICODE_BINDING OS_TRAIL>; \
        }; \
    };

#define UC_MODMORPH(NAME, BINDING, SHIFTED_BINDING) \
    behaviors { \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            label = STRINGIFY(MM_ ## NAME); \
            #binding-cells = <0>; \
            bindings = <BINDING>, <SHIFTED_BINDING>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
        }; \
    };

#define UNICODE_SINGLE(NAME, L0, L1, L2, L3) \
    UC_MACRO(uc_lower_ ## NAME, &kp L0 &kp L1 &kp L2 &kp L3) \
    UC_MODMORPH(uc_ ## NAME, &uc_lower_ ## NAME, &none)

#define UNICODE_PAIR(NAME, L0, L1, L2, L3, U0, U1, U2, U3) \
    UC_MACRO(uc_lower_ ## NAME, &kp L0 &kp L1 &kp L2 &kp L3) \
    UC_MACRO(uc_upper_ ## NAME, &kp U0 &kp U1 &kp U2 &kp U3) \
    UC_MODMORPH(uc_ ## NAME, &uc_lower_ ## NAME, &uc_upper_ ## NAME)

/ {
    UNICODE_PAIR(dash,    N2, N0, N1, N4,    N2, N0, N1, N3)
};
